# AgriIntel360 - Script de d√©marrage rapide
# Usage: .\scripts\setup.ps1

Write-Host "üåç AgriIntel360 - Configuration initiale" -ForegroundColor Green

# V√©rifier si Docker est install√©
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker trouv√©: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n'est pas install√©. Veuillez installer Docker Desktop." -ForegroundColor Red
    exit 1
}

# V√©rifier si Docker Compose est disponible
try {
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ Docker Compose trouv√©: $composeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose n'est pas disponible." -ForegroundColor Red
    exit 1
}

# Cr√©er le fichier .env s'il n'existe pas
if (-Not (Test-Path ".env")) {
    Write-Host "üìù Cr√©ation du fichier .env..." -ForegroundColor Yellow
    Copy-Item ".env.example" ".env"
    Write-Host "‚úÖ Fichier .env cr√©√©. Veuillez le personnaliser avec vos cl√©s API." -ForegroundColor Green
}

# Cr√©er les r√©pertoires n√©cessaires
Write-Host "üìÅ Cr√©ation des r√©pertoires..." -ForegroundColor Yellow
$directories = @("logs", "uploads", "data", "infrastructure/monitoring")
foreach ($dir in $directories) {
    if (-Not (Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        Write-Host "  ‚úÖ $dir" -ForegroundColor Green
    }
}

# Configuration de monitoring
Write-Host "üìä Configuration du monitoring..." -ForegroundColor Yellow

# Cr√©er le fichier prometheus.yml
$prometheusConfig = @"
global:
  scrape_interval: 15s

scrape_configs:
  - job_name: 'agriintel360-backend'
    static_configs:
      - targets: ['backend:8000']
        labels:
          service: 'agriintel360-api'
    metrics_path: '/metrics'
    scrape_interval: 30s

  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s
"@

$prometheusConfig | Out-File -FilePath "infrastructure/monitoring/prometheus.yml" -Encoding UTF8

Write-Host "‚úÖ Configuration Prometheus cr√©√©e" -ForegroundColor Green

# D√©marrer les services
Write-Host "üöÄ D√©marrage des services..." -ForegroundColor Yellow

try {
    # D√©marrer les bases de donn√©es d'abord
    Write-Host "  üìä D√©marrage des bases de donn√©es..." -ForegroundColor Cyan
    docker-compose up -d postgres mongodb redis elasticsearch
    
    # Attendre que les BDD soient pr√™tes
    Write-Host "  ‚è≥ Attente de la disponibilit√© des bases de donn√©es (30s)..." -ForegroundColor Cyan
    Start-Sleep -Seconds 30
    
    # D√©marrer les autres services
    Write-Host "  üîß D√©marrage des services applicatifs..." -ForegroundColor Cyan
    docker-compose up -d
    
    Write-Host "‚úÖ Tous les services sont d√©marr√©s!" -ForegroundColor Green
    
} catch {
    Write-Host "‚ùå Erreur lors du d√©marrage des services: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Afficher les URLs d'acc√®s
Write-Host "`nüåê URLs d'acc√®s:" -ForegroundColor Green
Write-Host "  ‚Ä¢ Frontend:         http://localhost:3000" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ API Backend:      http://localhost:8000" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ API Documentation: http://localhost:8000/api/v1/docs" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Airflow:          http://localhost:8080" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Prometheus:       http://localhost:9090" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Grafana:          http://localhost:3001" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ RabbitMQ:         http://localhost:15672" -ForegroundColor Cyan

Write-Host "`nüîê Identifiants par d√©faut:" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ Airflow:    admin / admin" -ForegroundColor White
Write-Host "  ‚Ä¢ Grafana:    admin / secure_password_123" -ForegroundColor White
Write-Host "  ‚Ä¢ RabbitMQ:   admin / secure_password_123" -ForegroundColor White

Write-Host "`nüìã Prochaines √©tapes:" -ForegroundColor Green
Write-Host "  1. Configurer vos cl√©s API dans le fichier .env" -ForegroundColor White
Write-Host "  2. Acc√©der √† http://localhost:8000/api/v1/docs pour tester l'API" -ForegroundColor White
Write-Host "  3. Cr√©er votre premier utilisateur via l'API" -ForegroundColor White
Write-Host "  4. Acc√©der au frontend sur http://localhost:3000" -ForegroundColor White

Write-Host "`nüéâ AgriIntel360 est pr√™t! Bon d√©veloppement!" -ForegroundColor Green